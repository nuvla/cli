""" Nuvla CLI main script """
import logging

import typer

from .commands import create, list, remove, locate, start, user, stop
from .nuvlaio.nuvlaio_cli import NuvlaIO
from .nuvlaio.edge import Edge


app_cli = typer.Typer()

# Add commands
app_cli.add_typer(create.app, name='create')
app_cli.add_typer(list.app, name='list')
app_cli.add_typer(remove.app, name='remove')
app_cli.add_typer(locate.app, name='locate')
app_cli.add_typer(start.app, name='start')
app_cli.add_typer(user.app, name='user')
app_cli.add_typer(stop.app, name='stop')

app_cli.registered_commands += user.app.registered_commands

logging.basicConfig(
        level=logging.ERROR,
        format='[%(asctime)s] Line:%(lineno)d %(levelname)s - %(message)s',
        datefmt='%H:%M:%S'
    )


@app_cli.command(name='clear')
def clear_edges(force: bool = typer.Option(...,
                                           prompt='You are about to decommission and '
                                                  'delete all the Edges generated by CLI,'
                                                  ' are you sure?',
                                           confirmation_prompt=True)):
    """
    Clears all the Edges instances for the user created by the CLI

    :return: None
    """
    if force:
        # Create NuvlaIO instance
        edge: Edge = Edge()
        edges_in_nuvla = edge.nuvla_api.search('nuvlabox',
                                               filter={"tags=='cli.created=True'"})

        for nuvla_edge in edges_in_nuvla.resources:

            edge.remove_edge(nuvla_edge.data.get('id'))


if __name__ == '__main__':
    app_cli()
